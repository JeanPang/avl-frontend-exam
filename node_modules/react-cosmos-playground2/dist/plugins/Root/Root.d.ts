import { FixtureState } from 'react-cosmos-shared2/fixtureState';
import { FixtureId } from 'react-cosmos-shared2/renderer';
import { StateUpdater } from 'react-cosmos-shared2/util';
import { TreeNode } from '../../shared/tree';
declare type Props = {
    storageCacheReady: boolean;
    fixtureTree: TreeNode<FixtureId>;
    selectedFixtureId: FixtureId | null;
    rendererConnected: boolean;
    validFixtureSelected: boolean;
    fixtureState: FixtureState;
    navOpen: boolean;
    panelOpen: boolean;
    navWidth: number;
    panelWidth: number;
    controlPanelRowOrder: string[];
    globalActionOrder: string[];
    globalOrder: string[];
    navRowOrder: string[];
    rendererActionOrder: string[];
    onToggleNav: () => unknown;
    onTogglePanel: () => unknown;
    onFixtureSelect: (fixtureId: FixtureId) => unknown;
    onFixtureClose: () => unknown;
    onFixtureStateChange: (stateUpdater: StateUpdater<FixtureState>) => void;
    setNavWidth: (width: number) => unknown;
    setPanelWidth: (width: number) => unknown;
};
export declare function Root({ storageCacheReady, fixtureTree, selectedFixtureId, rendererConnected, validFixtureSelected, fixtureState, navOpen, panelOpen, navWidth, panelWidth, controlPanelRowOrder, globalActionOrder, globalOrder, navRowOrder, rendererActionOrder, onToggleNav, onTogglePanel, onFixtureSelect, onFixtureClose, onFixtureStateChange, setNavWidth, setPanelWidth }: Props): JSX.Element;
export {};
