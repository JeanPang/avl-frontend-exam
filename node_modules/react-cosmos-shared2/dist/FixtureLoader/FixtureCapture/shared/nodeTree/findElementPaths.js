"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findElementPaths = findElementPaths;

var _lodash = require("lodash");

var _react = require("react");

var _react2 = require("../../../../react");

var _shared = require("./shared");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function findElementPaths(node) {
  var curPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  if (Array.isArray(node)) {
    return (0, _lodash.flatten)(node.map(function (child, idx) {
      return findElementPaths(child, "".concat(curPath, "[").concat(idx, "]"));
    }));
  }

  if (!(0, _react2.isReactElement)(node)) {
    // At this point the node can be null, boolean, string, number, Portal, etc.
    // https://github.com/facebook/flow/blob/172d28f542f49bbc1e765131c9dfb9e31780f3a2/lib/react.js#L13-L20
    return [];
  }

  var children = node.props.children;
  var childElPaths = // Props of elements returned by render functions can't be read here
  typeof children !== 'function' ? findElementPaths(children, (0, _shared.getChildrenPath)(curPath)) : []; // Ignore Fragment elements, but include their children

  return node.type === _react.Fragment ? childElPaths : [curPath].concat(_toConsumableArray(childElPaths));
}