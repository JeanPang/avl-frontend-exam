"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extendWithValues = extendWithValues;
exports.extendWithValue = extendWithValue;

var _shared = require("./shared");

// Use fixture state for serializable values and fall back to base values
function extendWithValues(obj, values) {
  var extendedObj = {};
  Object.keys(values).forEach(function (key) {
    extendedObj[key] = extendWithValue(obj[key], values[key]);
  });
  return extendedObj;
}

function extendWithValue(baseValue, value) {
  if (value.type === 'unserializable') {
    return baseValue;
  }

  if (value.type === 'object') {
    var baseObj = (0, _shared.isObject)(baseValue) ? baseValue : {};
    return extendWithValues(baseObj, value.values);
  }

  if (value.type === 'array') {
    var baseArr = (0, _shared.isArray)(baseValue) ? baseValue : [];
    return value.values.map(function (v, idx) {
      return extendWithValue(baseArr[idx], v);
    });
  }

  return value.value;
}