"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mountDomRenderer = mountDomRenderer;
Object.defineProperty(exports, "rendererConnect", {
  enumerable: true,
  get: function get() {
    return _rendererConnect.rendererConnect;
  }
});
Object.defineProperty(exports, "rendererId", {
  enumerable: true,
  get: function get() {
    return _rendererId.rendererId;
  }
});

var _react = _interopRequireDefault(require("react"));

var _FixtureLoader = require("react-cosmos-shared2/FixtureLoader");

var _reactDom = require("react-dom");

var _container = require("./container");

var _ErrorCatch = require("./ErrorCatch");

require("./globalErrorHandler");

var _rendererConnect = require("./rendererConnect");

var _rendererId = require("./rendererId");

var _renderMessage = require("./renderMessage");

var _selectedFixtureId = require("./selectedFixtureId");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mountDomRenderer(_ref) {
  var rendererConfig = _ref.rendererConfig,
      fixtures = _ref.fixtures,
      decorators = _ref.decorators,
      onErrorReset = _ref.onErrorReset;
  var domContainer = (0, _container.getDomContainer)(rendererConfig.containerQuerySelector);
  (0, _reactDom.render)(_react.default.createElement(_FixtureLoader.FixtureLoader, {
    rendererId: _rendererId.rendererId,
    rendererConnect: _rendererConnect.rendererConnect,
    fixtures: fixtures,
    selectedFixtureId: _selectedFixtureId.selectedFixtureId,
    systemDecorators: [_ErrorCatch.ErrorCatch],
    userDecorators: decorators,
    renderMessage: _renderMessage.renderMessage,
    onErrorReset: onErrorReset
  }), domContainer);
}