"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NativeFixtureLoader = NativeFixtureLoader;

var _react = _interopRequireDefault(require("react"));

var _FixtureLoader = require("react-cosmos-shared2/FixtureLoader");

var _reactNative = require("react-native");

var _urlParse = _interopRequireDefault(require("url-parse"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// https://stackoverflow.com/a/53655887/128816
_reactNative.YellowBox.ignoreWarnings(['Unrecognized WebSocket connection option(s) `agent`, `perMessageDeflate`, `pfx`, `key`, `passphrase`, `cert`, `ca`, `ciphers`, `rejectUnauthorized`. Did you mean to put these under `headers`?']); // TODO: Generate unique ID per device


var rendererId = 'native-renderer';

function NativeFixtureLoader(_ref) {
  var port = _ref.rendererConfig.port,
      fixtures = _ref.fixtures,
      decorators = _ref.decorators;
  var socketUrl = getSocketUrl(port);
  return _react.default.createElement(_FixtureLoader.FixtureLoader, {
    rendererId: rendererId,
    rendererConnect: (0, _FixtureLoader.createWebSocketsConnect)(socketUrl),
    fixtures: fixtures,
    selectedFixtureId: null,
    systemDecorators: [],
    userDecorators: decorators,
    renderMessage: renderMessage
  });
}

function getSocketUrl(port) {
  var host = (0, _urlParse.default)(_reactNative.NativeModules.SourceCode.scriptURL).hostname;
  return "ws://".concat(host, ":").concat(port);
}

function renderMessage(_ref2) {
  var msg = _ref2.msg;
  return _react.default.createElement(_reactNative.View, {
    style: styles.container
  }, _react.default.createElement(_reactNative.Text, null, msg));
}

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center'
  }
});