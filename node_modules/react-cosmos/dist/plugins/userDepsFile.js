"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.userDepsFile = userDepsFile;

var _chokidar = require("chokidar");

var _fs = require("fs");

var _lodash = require("lodash");

var _util = _interopRequireDefault(require("util.promisify"));

var _path = _interopRequireDefault(require("path"));

var _userDeps = require("../shared/userDeps");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var writeFileAsync = (0, _util.default)(_fs.writeFile);

function userDepsFile(_x) {
  return _userDepsFile.apply(this, arguments);
}

function _userDepsFile() {
  _userDepsFile = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(_ref) {
    var cosmosConfig, watcher;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cosmosConfig = _ref.cosmosConfig;
            _context.next = 3;
            return generateUserDepsFile(cosmosConfig);

          case 3:
            _context.next = 5;
            return startFixtureFileWatcher(cosmosConfig);

          case 5:
            watcher = _context.sent;
            return _context.abrupt("return", function () {
              watcher.close();
            });

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _userDepsFile.apply(this, arguments);
}

var DEBOUNCE_INTERVAL = 50;

function startFixtureFileWatcher(_x2) {
  return _startFixtureFileWatcher.apply(this, arguments);
}

function _startFixtureFileWatcher() {
  _startFixtureFileWatcher = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee2(cosmosConfig) {
    var fixturesDir, fixtureFileSuffix, FILE_PATTERNS;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            fixturesDir = cosmosConfig.fixturesDir, fixtureFileSuffix = cosmosConfig.fixtureFileSuffix;
            FILE_PATTERNS = [].concat(_toConsumableArray((0, _userDeps.getFixturePatterns)(fixturesDir, fixtureFileSuffix)), _toConsumableArray((0, _userDeps.getDecoratorPatterns)()));
            return _context2.abrupt("return", new Promise(function (resolve) {
              var watcher = (0, _chokidar.watch)(FILE_PATTERNS, {
                ignored: (0, _userDeps.getIgnorePatterns)(),
                ignoreInitial: true,
                cwd: cosmosConfig.rootDir
              }).on('ready', function () {
                return resolve(watcher);
              }).on('all', (0, _lodash.debounce)(function () {
                return generateUserDepsFile(cosmosConfig);
              }, DEBOUNCE_INTERVAL));
            }));

          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _startFixtureFileWatcher.apply(this, arguments);
}

function generateUserDepsFile(_x3) {
  return _generateUserDepsFile.apply(this, arguments);
}

function _generateUserDepsFile() {
  _generateUserDepsFile = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee3(cosmosConfig) {
    var userDepsFilePath, port, rendererConfig, userDepsModule, relUserDepsFilePath;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            userDepsFilePath = cosmosConfig.userDepsFilePath, port = cosmosConfig.port;
            rendererConfig = {
              port: port
            };
            userDepsModule = (0, _userDeps.generateUserDepsModule)(cosmosConfig, rendererConfig);
            _context3.next = 5;
            return writeFileAsync(userDepsFilePath, userDepsModule, 'utf8');

          case 5:
            relUserDepsFilePath = _path.default.relative(process.cwd(), userDepsFilePath);
            console.log("[Cosmos] Generated ".concat(relUserDepsFilePath));

          case 7:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _generateUserDepsFile.apply(this, arguments);
}