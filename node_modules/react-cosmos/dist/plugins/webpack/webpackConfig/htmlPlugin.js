"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ensureHtmlWebackPlugin = ensureHtmlWebackPlugin;
exports.getHtmlWebpackPlugin = getHtmlWebpackPlugin;

var _importFrom = _interopRequireDefault(require("import-from"));

var _lodash = require("lodash");

var _playgroundHtml = require("../../../shared/playgroundHtml");

var _shared = require("./shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function ensureHtmlWebackPlugin(_ref, plugins) {
  var rootDir = _ref.rootDir;

  if ((0, _shared.hasPlugin)(plugins, 'HtmlWebpackPlugin')) {
    return plugins.map(function (plugin) {
      return isHtmlWebpackPlugin(plugin) ? changeHtmlPluginFilename(plugin) : plugin;
    });
  }

  var htmlWebpackPlugin = getHtmlWebpackPlugin(rootDir);

  if (!htmlWebpackPlugin) {
    return plugins;
  }

  return [].concat(_toConsumableArray(plugins), [new htmlWebpackPlugin({
    title: 'React Cosmos',
    filename: _playgroundHtml.RENDERER_FILENAME
  })]);
}

function getHtmlWebpackPlugin(rootDir) {
  return _importFrom.default.silent(rootDir, 'html-webpack-plugin');
}

function isHtmlWebpackPlugin(plugin) {
  return (0, _shared.isInstanceOfPlugin)(plugin, 'HtmlWebpackPlugin');
}

function changeHtmlPluginFilename(htmlPlugin) {
  if (htmlPlugin.options.filename !== 'index.html') {
    return htmlPlugin;
  }

  var safeOptions = (0, _lodash.omit)(htmlPlugin.options, 'chunks');
  return new htmlPlugin.constructor(_objectSpread({}, safeOptions, {
    filename: _playgroundHtml.RENDERER_FILENAME
  }));
}